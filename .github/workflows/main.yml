name: Conditional Test Runner

on:
  pull_request:
    paths:
      - 'src/**'

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Determine Problem and Language
        id: problem-language
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^src/')
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No src files changed."
            echo "::set-output name=problem::"
            echo "::set-output name=language::"
          else
            PROBLEM=$(echo "$CHANGED_FILES" | grep -o 'src/[^/]*/' | sed 's/src\///' | sed 's/\///' | uniq)
            LANGUAGE=$(echo "$CHANGED_FILES" | grep -o '[^/]*/[^/]*/$' | sed 's/\///g' | uniq)
            echo "Problem: $PROBLEM, Language: $LANGUAGE"
            echo "::set-output name=problem::$PROBLEM"
            echo "::set-output name=language::$LANGUAGE"
          fi

      - name: Set up .NET Core
        if: steps.problem-language.outputs.language == 'csharp' && steps.problem-language.outputs.problem
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # specify your dotnet version

      - name: Set up Go
        if: steps.problem-language.outputs.language == 'golang' && steps.problem-language.outputs.problem
        uses: actions/setup-go@v2
        with:
          go-version: '1.16' # specify your Go version

      - name: Set up Java
        if: steps.problem-language.outputs.language == 'java' && steps.problem-language.outputs.problem
        uses: actions/setup-java@v1
        with:
          java-version: '11' # specify your Java version

      - name: Set up Node.js
        if: steps.problem-language.outputs.language == 'node' && steps.problem-language.outputs.problem
        uses: actions/setup-node@v2
        with:
          node-version: '14' # specify your Node.js version

      - name: Set up Python
        if: steps.problem-language.outputs.language == 'python' && steps.problem-language.outputs.problem
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # specify your Python version

      - name: Run .NET Tests
        if: steps.problem-language.outputs.language == 'csharp' && steps.problem-language.outputs.problem
        run: dotnet test src/${{ steps.problem-language.outputs.problem }}/csharp/

      - name: Run Go Tests
        if: steps.problem-language.outputs.language == 'golang' && steps.problem-language.outputs.problem
        run: go test src/${{ steps.problem-language.outputs.problem }}/golang/...

      - name: Run Java Tests
        if: steps.problem-language.outputs.language == 'java' && steps.problem-language.outputs.problem
        run: mvn -f src/${{ steps.problem-language.outputs.problem }}/java/pom.xml test

      - name: Run Node.js Tests
        if: steps.problem-language.outputs.language == 'node' && steps.problem-language.outputs.problem
        run: npm install && npm test --prefix src/${{ steps.problem-language.outputs.problem }}/node/

      - name: Run Python Tests
        if: steps.problem-language.outputs.language == 'python' && steps.problem-language.outputs.problem
        run: pip install -r src/${{ steps.problem-language.outputs.problem }}/python/requirements.txt && pytest src/${{ steps.problem-language.outputs.problem }}/python/
