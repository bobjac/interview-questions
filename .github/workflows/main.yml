name: Conditional Test Runner

on:
  pull_request:
    paths:
      - 'src/**'

jobs:
  run-conditional-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Determine Problem and Language
        id: problem-language
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^src/')
          PROBLEM=$(echo "$CHANGED_FILES" | cut -d'/' -f2 | uniq)
          LANGUAGE=$(echo "$CHANGED_FILES" | cut -d'/' -f3 | uniq)
          echo "::set-output name=problem::$PROBLEM"
          echo "::set-output name=language::$LANGUAGE"
          echo "Changed Problem: $PROBLEM"
          echo "Changed Language: $LANGUAGE"

      - name: Set up .NET Core
        if: steps.problem-language.outputs.language == 'csharp'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Set up Go
        if: steps.problem-language.outputs.language == 'golang'
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Set up Java
        if: steps.problem-language.outputs.language == 'java'
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Node.js
        if: steps.problem-language.outputs.language == 'node'
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Set up Python
        if: steps.problem-language.outputs.language == 'python'
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies and run .NET tests
        if: steps.problem-language.outputs.language == 'csharp'
        run: dotnet test src/${{ steps.problem-language.outputs.problem }}/csharp/

      - name: Install dependencies and run Go tests
        if: steps.problem-language.outputs.language == 'golang'
        run: go test src/${{ steps.problem-language.outputs.problem }}/golang/...

      - name: Install dependencies and run Java tests
        if: steps.problem-language.outputs.language == 'java'
        run: mvn -f src/${{ steps.problem-language.outputs.problem }}/java/pom.xml test

      - name: Install dependencies and run Node.js tests
        if: steps.problem-language.outputs.language == 'node'
        run: npm install && npm test --prefix src/${{ steps.problem-language.outputs.problem }}/node/

      - name: Install dependencies and run Python tests
        if: steps.problem-language.outputs.language == 'python'
        run: pip install -r src/${{ steps.problem-language.outputs.problem }}/python/requirements.txt && pytest src/${{ steps.problem-language.outputs.problem }}/python/
